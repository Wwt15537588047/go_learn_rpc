// Code generated by MockGen. DO NOT EDIT.
// Source: micro/test/test.go

// Package test is a generated GoMock package.
package test

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMyInter is a mock of MyInter interface.
type MockMyInter struct {
	ctrl     *gomock.Controller
	recorder *MockMyInterMockRecorder
}

// MockMyInterMockRecorder is the mock recorder for MockMyInter.
type MockMyInterMockRecorder struct {
	mock *MockMyInter
}

// NewMockMyInter creates a new mock instance.
func NewMockMyInter(ctrl *gomock.Controller) *MockMyInter {
	mock := &MockMyInter{ctrl: ctrl}
	mock.recorder = &MockMyInterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMyInter) EXPECT() *MockMyInterMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockMyInter) GetName(id int) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName", id)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockMyInterMockRecorder) GetName(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockMyInter)(nil).GetName), id)
}
